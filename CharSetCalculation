package calNum;

import java.util.HashSet;
import java.util.Set;

public class Ce1 {

	public static void main(String[] args) {
		String testString = "A quick brown fox jumps over the lazy dog";
		testString = "A slow yellow fox crawls under the proactive dog";
		check(testString);
	}
	
	private static void check(String testString)
	{
		testString = testString.toLowerCase();
		Set<Character> set1 = new HashSet<Character>();
		for(char ch: testString.toCharArray())
		{
			set1.add(ch);
		}
		
		int countDigit = 0;
		for(char ch1 : set1)
		{
			if(Character.isDigit(ch1))
			{
				countDigit ++ ;
			}
			if(Character.isSpace(ch1))
			{
				countDigit++;
			}
		}
		
		if(set1.size() - countDigit == 26)
		{
			System.out.println("True");
		}
		else
		{
			String test  = "abcdefeghjiklmnopqrstuvwxyz";
			for(int i=0;i<26;i++)
			{
				if(set1.contains(test.charAt(i)))
				{
					continue;
				}
				else
				{
					System.out.println("dont have - >" + test.charAt(i));
				}
			}
		/*    BitSet alpha = new BitSet(26);
		    for(char ch : test.toUpperCase().toCharArray())
		        if(Character.isLetter(ch))
		            alpha.set(ch - 65);*/
			System.out.println("false");
		}
	}
	
	
}
